
module paraDNS

import Hilti

type DNS::Message = struct {}

type SpicyHilti::UserCookie = caddr
declare ref<DNS::Message> DNS::parse_Message(ref<bytes> __data, SpicyHilti::UserCookie __cookie)

void parse_packet(ref<bytes> b, SpicyHilti::UserCookie c)
{
    local ref<DNS::Message> msg

	try {
        msg = call DNS::parse_Message(b, c)
		}

     catch {
	    # call Hilti::print ("exception")
	}
}

void parse_packet2()
{
}

void schedule_packet(ref<bytes> b, SpicyHilti::UserCookie c, int<64> h) &noyield
{
    h = int.mod h 10
	h = int.add h 1

    thread.schedule parse_packet(b, c) h
}

export schedule_packet
