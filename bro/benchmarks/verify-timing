#! /usr/bin/env python

import sys

tags = {}

def addUp(fields, expected):

	time = 0
	cycles = 0

	for (op, f) in fields:
		try:
			if op == "+":
				time += float(tags[f][0])
				cycles += int(tags[f][1])

			if op == "-":
				time -= float(tags[f][0])
				cycles -= int(tags[f][1])

		except KeyError, e:
			print >>sys.stderr, "warning: tag '%s' not found" % e
			pass

	expected_time = float(tags[expected][0])
	expected_cycles = int(tags[expected][1])
	diff_time = time - expected_time
	diff_cycles = cycles - expected_cycles
	perc_time = diff_time * 100.0 / expected_time if expected_time else 0.0
	perc_cycles = diff_cycles * 100.0 / expected_cycles if expected_cycles else 0.0

	f = ["%s %s" % (f[0], f[1]) for f in fields]

	print "==== (%s) vs %s " % (" ".join(f), expected)
	print "Time  : %.2f vs %.2f (%+.2f%%)" % (time, expected_time, perc_time)
	print "Cycles: %d vs %d (diff %+.2f%%)" % (cycles, expected_cycles, perc_cycles)
	print

for line in sys.stdin:
	if not line.startswith("# "):
		continue

	m = line.split()
	tags[m[1]] = m[2].split("/")

addUp((("+", "core-init"), ("+", "bro_init"), ("+", "net-run"), ("+", "cleanup")), "total-bro")
addUp((("+", "bro_init"), ("+", "net-run")), "total-processing")
addUp((("+", "protocol-land"), ("+", "script-land"), ("+", "core-other-land")), "net-run")
addUp((("+", "hilti-land-compiled-code"), ("+", "hilti-land-compiled-stubs")), "hilti-land")
addUp((("+", "hilti-land"), ), "script-land")
addUp((("+", "hilti-land"), ("+", "script-legacy-land"),), "script-land")

# Can't split net-run into pieces.
# addUp((("+", "core-land"), ), "net-run")


