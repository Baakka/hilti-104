grammar bacnet.pac2;

protocol analyzer pac2::BACnet over UDP:
    parse with BACnet::Message,
    port 47808/udp;

on BACnet::Message -> event bacnet_message($conn, $is_orig, self.func, self.len);

## BVLC management functions.
## At the moment, Read-FDT and Readt-BDT do not have their own event, beause they
## do not carry any data. Get those by examining bacnet_message.
## The same applies for Original-Unicast-MPDU, Original-Broadcast-NPDU and 
## Distribute-Broadcast-To-Network.
## Forwarded-NPDU does have its own event for the extra data it contains.

on BACnet::Message if ( self.func == BACnet::BVLC_function::BVLC-Result ) 
  -> event bacnet_bvlc_result ($conn, self.bbmd.bvlc_result);

#on BACnet::Message if ( self.func == BACnet::BVLC_function::Write-BDT )
#  -> event bacnet_bvlc_write_bdt ($conn, [ BACnet::bro_bdt_entry(i) for i in self.bbmd.bdts ]);

#on BACnet::Message if ( self.func == BACnet::BVLC_function::Read-BDT-ACK )
#  -> event bacnet_bvlc_read-bdt-ack ($conn, [ BACnet::bro_bdt_entry(i) for i in self.bbmd.bdts ]);

on BACnet::Message if ( self.func == BACnet::BVLC_function::Register-FD ) 
  -> event bacnet_register_fd ($conn, self.bbmd.ttl);

#on BACnet::Message if ( self.func == BACnet::BVLC_function::Read-FDT-ACK )
#  -> event bacnet_bvlc_read_fdt_ack ($conn, [ BACnet::bro_fdt_entry(i) for i in self.bbmd.fdts ]);

#on BACnet::Message if ( self.func == BACnet::BVLC_function::Delete-FDT-Entry )
#  -> event bacnet_bvlc_delete_ftd_entry ($conn, [ BACnet::bro_fdt_entry(i) for i in self.bbmd.fdts ]);

on BACnet::Message if ( self.func == BACnet::BVLC_function::Forwarded-NPDU )
  -> event bacnet_bvlc_forwarded_npdu_information ($conn, self.originator, self.originator_port);

## BACnet NPDU NL-Messages

#on BACnet::NPDU if ( ( self.control.nlmessage == 1 ) && ( self.message_type == BACnet::NPDU_type::Who-Is-Router-To-Network ) )
#  -> event bacnet_npdu_who_is_router_to_network ($conn, [$dnet=self.npdu_message.dnets]);
