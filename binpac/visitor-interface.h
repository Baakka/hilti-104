
#ifndef BINPAC_VISITOR_INTERFACE_H
#define BINPAC_VISITOR_INTERFACE_H

#include "common.h"

namespace binpac {

/// Visitor interface. This class defines one visit method for each type of
/// BINPAC++ AST node that we have. Visitor implementations then override the
/// ones they need.
class VisitorInterface
{
public:
    // This is autogenerated and has the visits() for all the
    // classes defined in the file "nodes.decl".
    #include "autogen/visitor-interface.h"

    // This is autogenerated and has the visits() for all the (likewise
    // generated) expression::operator_::* classes.
    #include "autogen/operators/operators-visits.h"

protected:
    /// Internal function. This carries out the visitor callback.
    virtual void callAccept(shared_ptr<ast::NodeBase> node);
};

}

#endif
