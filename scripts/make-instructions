#! /usr/bin/env bash
#
# Autogenerates files with support code implementing HILTI instructions.
#
# This creates
#
#     With -h:
#       instructions.h
#       instructions-declare.h
#       instructions-define.cc
#       instructions-visits.h
#       instructions-stmt-builder.h
#       instructions-register.cc
#

scripts=`dirname $0`

function getInstructions
{
    grep -h '^[\t ]*iBegin' | sed 's/.*(\(.*\) *, ".*)/\1/g' | sed 's/, /::/g' | sort
}

function lock()
{
  while true; do
        if mkdir "$1.d" 2>/dev/null; then
           break;
        fi
        echo "`basename $0`: waiting for lock $1.d ..."
        sleep 1
  done
}

function unlock ()
{
  rmdir "$1.d"
}

if [ $# -le 2 ]; then
    echo "usage: `basename $0` -h  <current-source-directory> <target-directory> *.h"
    exit 1
fi

kind=$1
src=$2
dst=$3
shift
shift
shift

cd $src

hdrs=$(echo $@ | sed 's/\.cc/.h/g')
tmp=$dst/make-instructions.tmp.$$

## Get the names of all instruction classes (e.g., "integer::Add").
cat $@ | getInstructions >$tmp

##### Create instructions.h that includes all the instruction *.h files.

if [ "$kind" == "-h" ]; then

    LOCK=$dst/lock
    TIMESTAMP=$dst/timestamp
    now=`date +%s`

    lock $LOCK
    trap "unlock $LOCK" EXIT

    if [ -e $TIMESTAMP ]; then
        ts=`cat $TIMESTAMP`
        if [ $ts -gt $now ]; then
            # Updated since we started.
            exit 0;
        fi
    fi

    #### Create instructions-declare.h that declares all instruction statement classes, and 
    #### instructions-visits.h with visit() methods for all instruction statement classes, and
    #### instructions-exoression-builder.h with visit() methods for the statement builder.
    #### instructions-register.cc with calls to instructions register functions.

    cat </dev/null >$dst/instructions-visits.h.tmp
    cat </dev/null >$dst/instructions-stmt-builder.h.tmp

    cat </dev/null >$dst/instructions-declare.h.tmp <<EOF
namespace hilti {
EOF

    cat >$dst/instructions-define.cc.tmp <<EOF

#include <hilti/hilti-intern.h>

namespace hilti {

EOF

    cat >$dst/instructions-register.cc.tmp <<EOF

namespace hilti {

void __registerAllInstructions()
{
EOF

    cat $tmp | while read line; do
        ns=`echo $line | sed 's/\(.*\)::\(.*\)/\1/g'`
        cls=`echo $line | sed 's/\(.*\)::\([^: ]*\) *\( *:[^:].*\)\{0,\}/\2/g'`
        echo "namespace statement { namespace instruction { namespace $ns { class $cls; } } };" >>$dst/instructions-declare.h.tmp
        echo "namespace instruction { namespace $ns { namespace __class { class $cls; } extern std::shared_ptr<::hilti::instruction::$ns::__class::$cls> $cls; } }" >>$dst/instructions-declare.h.tmp
        echo "namespace instruction { namespace $ns { namespace __class { class $cls; } std::shared_ptr<::hilti::instruction::$ns::__class::$cls> $cls; } }" >>$dst/instructions-define.cc.tmp

        echo "       virtual void visit(statement::instruction::$ns::$cls* i) {}" >>$dst/instructions-visits.h.tmp

        echo "       void visit(statement::instruction::$ns::$cls* i) override;" >>$dst/instructions-stmt-builder.h.tmp

        name=`echo $line | sed 's/::/_/g'`
        echo "    extern void __register_${ns}_${cls}(); __register_${ns}_${cls}();" >>$dst/instructions-register.cc.tmp
    done

    cat >>$dst/instructions-register.cc.tmp <<EOF
}

}
EOF

    cat >>$dst/instructions-declare.h.tmp <<EOF
}
EOF

    cat >>$dst/instructions-define.cc.tmp <<EOF
}
EOF

    cat >$dst/instructions.h.tmp <<EOF

#ifndef HILTI_AUTOGEN_INSTRUCTIONS_H
#define HILTI_AUTOGEN_INSTRUCTIONS_H

EOF

    for h in $hdrs; do
        echo "#include <hilti/autogen/$h>" >>$dst/instructions.h.tmp
    done

    echo >>$dst/instructions.h.tmp
    echo "#endif" >>$dst/instructions.h.tmp


    date +%s >$TIMESTAMP

fi

#### Put live if content has changed compared to last run.

$scripts/install-if-changed $dst/instructions-register.cc.tmp $dst/instructions-register.cc
$scripts/install-if-changed $dst/instructions-declare.h.tmp $dst/instructions-declare.h
$scripts/install-if-changed $dst/instructions-define.cc.tmp $dst/instructions-define.cc
$scripts/install-if-changed $dst/instructions-stmt-builder.h.tmp $dst/instructions-stmt-builder.h
$scripts/install-if-changed $dst/instructions-visits.h.tmp $dst/instructions-visits.h
$scripts/install-if-changed $dst/instructions.h.tmp $dst/instructions.h

#### Cleanup.

rm -f $tmp




