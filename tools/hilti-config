#! /usr/bin/env bash
#
# This is preliminary. Eventually, configure will insert the right
# paths here.

function usage {
   cat <<EOF
Usage: hilti-config <options>

  == General options:

      --debug               Adapt all output for building debugging versions.
      --distbase            Print path of the HILTI source distribution.
      --libhilti            Print path to libhilti.
      --prefix              Print path of installation (TODO: same as --distbase currently)
      --version             Print HILTI version.

  == Options printing flags for linking C++ code to the HILTI compiler infrastructure.

      --hilti-cxxflags      Print flags for C++ compiler.
      --hilti-ldflags       Print flags for system linker.

  == Options printing flags for linking host application code with libhilti.

      --libhilti-cflags     Print flags for C compiler.
      --libhilti-cxxflags   Print flags for C++ compiler.
      --libhilti-ldflags    Print flags for system linker.

  == Options printing flags for running hiltic.

      --hiltic-binary       Print path of hiltic binary
      --hiltic-flags        Print flags for hiltic.
      --hiltic-flags-main   Print flags for hiltic to link libhiltimain

EOF
   exit 1
}

function release_or_debug {
    std=$1
    dbg=$2

    if [ "$debug" == "" ]; then
        echo $std
    else
        echo $dbg $std
    fi
}

### Determine distbase.

base=$HILTI_BASE

if [ "$base" == "" ]; then
   # Try to find the HILTI distribution based on our path.

   # If we are called via a symbolic link, dereference it.
   link=`readlink $0`
   if [ "$link" != "" ]; then
       dir=`dirname $link`
   else
       dir=`dirname $0`
   fi

   base=`cd $dir/.. && pwd -P`
fi

if [ ! -d "$base/libhilti" ]; then
    echo "cannot determine HILTI directory; please set HILTI_BASE correctly"
    exit 1
fi

if [ $# == 0 ]; then
    usage
fi

### Add the libpcap flags.

# pcap_config=`which pcap-config 2>/dev/null`
#
# if [ "$pcap_config" == "" ]; then
#    echo "cannot find pcap-config"
#    exit 1
# fi
#
# pcap_cflags=`pcap-config --cflags `
# pcap_libs=`pcap-config --libs | sed 's/-L /-L/g'` # clang doesn't like spaces.

### Parse command line once to see if we have --debug in there.

build_mode="release"
builddir=$base/build

for arg in $@; do
    if [ "$arg" == "--debug" ]; then
        debug=1
        build_mode="debug"
        libpostfix="-dbg"
    fi
done

### Now parse the rest.

while [ "$1" != "" ]; do
    case $1 in

    # General options.

        --version)
            echo "HILTI 0.2"
            shift;;

        --distbase)
            echo $base
            shift;;

        --prefix)
            # No installation yet.
            echo $base
            shift;;

        --debug)
            # Done in first pass already.
            shift;;

        --libhilti)
            echo "$base/libhilti"
            shift;;

     # libhilti
        --libhilti-cflags)
            echo "-I$base/libhilti -I$builddir/libhilti-${build_mode}"
            shift;;

        --libhilti-cxxflags)
            echo "-I$base/libhilti -I$builddir/libhilti-${build_mode}"
            shift;;

        --libhilti-ldflags)
            echo "$base/build/libhilti-${build_mode}/libhilti-rt-native.a -lm -lpthread"
            shift;;

     # hiltic

        --hiltic-binary)
            echo "$base/build/tools/hiltic"
            shift;;

        --hiltic-flags)
            echo "$base/libhilti/type-info.hlt $base/build/libhilti-${build_mode}/libhilti-rt${libpostfix}.bca -I$base/libhilti"
            shift;;

        --hiltic-flags-main)
            echo "$base/libhilti/type-info.hlt $base/build/libhilti-${build_mode}/libhilti-rt-main${libpostfix}.bca -I$base/libhilti"
            shift;;

     # HILTI
        --hilti-cxxflags)
            llvm_flags=`llvm-config --cxxflags`
            llvm_flags="$llvm_flags -fexceptions -frtti" # We want exception.
            echo "-stdlib=libc++ -std=c++0x -I$base/libhilti -I$base/build -I$base/libhilti/$builddir -I$base/hilti -I$base $llvm_flags"
            shift;;

        --hilti-ldflags)
            llvm_flags=`llvm-config --ldflags --libs core bitreader bitwriter linker asmparser`
            echo "$llvm_flags $base/build/libhilti.a $base/build/hilti/codegen/libffi/libhilti-ffi.a"
            shift;;

        -h)
            usage;;
        *)
            usage;;
    esac
done




