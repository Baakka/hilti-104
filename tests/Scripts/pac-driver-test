#! /usr/bin/env bash
#
# Scripts for use in BinPAC unit tests for building pac-driver-based
# standalone binaries. It supports a number of different built variants,
# depending on environments variables. Usage:
#
#     pac-driver-tests <build options> -- <runtime options>
#
#  <build optiosn> must only be options understood by both hilti-build and pac-driver-jit.
#
#  <runtime options> will be passed to pac-driver at runtime (e.g., "-p Foo" to select a parser).
#
# The script understands the following environment variables:
#
#    PAC_DRIVER_TEST_MODE=jit          -> Use pac-driver-jit
#    PAC_DRIVER_TEST_MODE=hilti-build  -> Use hilti-build, plus execution of the resulting binary.
#
#    PAC_DRIVER_TEST_DEBUG=0           -> Build release version.
#    PAC_DRIVER_TEST_DEBUG=1           -> Build debug version.
#
#    PAC_DRIVER_TEST_INCREMENTAL=<n>   -> Run pac-driver with '-i <n>'.
#
#    PAC_DRIVER                        -> Path to pac-driver.c to use with hilti-build.
#    PAC_DRIVER_JIT                    -> Path to pac-driver-jit executable.
#    HILTI_BUILD                       -> Path to hilti-build.
#
# By default, the scripts uses hilti-build in debug mode and non-incremental inoput.
# If the paths aren't given, the script takes a guess.

base=$(cd `dirname $0`/../.. >/dev/null; pwd -P)

debug="$PAC_DRIVER_TEST_DEBUG"
mode="$PAC_DRIVER_TEST_MODE"
incr="$PAC_DRIVER_TEST_INCREMENTAL"
pac_driver="$PAC_DRIVER"
pac_driver_jit="$PAC_DRIVER_JIT"
hilti_build="$HILTI_BUILD"

test "$mode" != "" || mode=hilti-build
test "$debug" != "" || debug=1
test "$pac_driver" != "" || pac_driver=$base/tools/pac-driver/pac-driver.cc
test "$pac_driver_jit" != "" || pac_driver_jit=$base/build/tools/pac-driver/pac-driver
test "$hilti_build" != "" || hilti_build=$base/tools/hilti-build

cache=.pac-driver-test.cache

function execute()
{
    cmdline=$@

    if [ "$TEST_VERBOSE" != "" ]; then
        echo $cmdline | sed "s#$base/#[...]/#g" >>$TEST_VERBOSE
    fi

    $cmdline
}

function executeWithCache()
{
    cmdline=$@

    if [ -e "$cache" ]; then
        if [ "`cat $cache | sed 's/\n//g'`" == "$cmdline" ]; then
            # We have already executed this command line.
            if [ "$TEST_VERBOSE" != "" ]; then
                echo "$cmdline [cached]" | sed "s#$base/#[...]/#g" >>$TEST_VERBOSE
            fi

            return 0;
        fi
    fi

    echo $cmdline >$cache
    execute $cmdline
}


build_opts=""
runtime_opts=""

while [ "$1" != "" -a "$1" != "--" ]; do
    build_opts="$build_opts $1"
    shift
done

shift

while [ "$1" != "" ]; do
    runtime_opts="$runtime_opts $1"
    shift
done

if [ "$debug" == "1" ]; then
    build_opts="-d $build_opts"
else
    build_opts="-O $build_opts"
fi

if [ "$incr" != "" ]; then
    runtime_opts="-i $incr $runtime_opts"
fi

#stdin=.pac-driver-test.stdin.$$.tmp
#cat >$stdin

if [ "$mode" == "hilti-build" ]; then
    executeWithCache $hilti_build $build_opts -t $pac_driver -o a.out || exit 1
    execute ./a.out $runtime_opts || exit 1

elif [ "$mode" == "jit" ]; then
    execute $pac_driver_jit $runtime_opts $build_opts || exit 1

else
    echo "unknown pac-driver-test mode '$mode'" >&2
    exit 1
fi
