module Main

import Hilti

void run()
{

  local int<32> y
  local iterator<list<int<32>>> __end_1
  local iterator<list<int<32>>> __iter_1
  local bool __cmp_1
  local int<32> x
  local iterator<list<int<32>>> __end_2
  local iterator<list<int<32>>> __iter_2
  local bool __cmp_2
  local ref<list<int<32>>> l
  local string s
  local string addl
  
  
      # pred: { <none> } succ: { [0098] }
      # def: { run%l.2 } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { <none> } live-out: { run%l.2 }
      # now-dead: { <none> }
      [0097] l = assign list<int<32>>(1, 2, 3, 4, 5)
      # pred: { [0097] } succ: { [0099] }
      # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { run%l.2 } live-out: { run%l.2 }
      # now-dead: { <none> }
      [0098] call Hilti::print ("A", True)
      # pred: { [0098] } succ: { [0100] }
      # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { run%l.2 } live-out: { run%l.2 }
      # now-dead: { <none> }
      [0099] jump @__loop_entry_2
  
  @__loop_entry_2:
      # pred: { [0099] } succ: { [0101] }
      # def: { run%__iter_2.2 } clear: { <none> } mod: { run%l.2 } read: { <none> }
      # live-in: { run%l.2 } live-out: { run%__iter_2.2, run%l.2 }
      # now-dead: { <none> }
      [0100] __iter_2 = begin l
      # pred: { [0100] } succ: { [0102] }
      # def: { run%__end_2.2 } clear: { <none> } mod: { run%l.2 } read: { <none> }
      # live-in: { run%__iter_2.2, run%l.2 } live-out: { run%__end_2.2, run%__iter_2.2, run%l.2 }
      # now-dead: { <none> }
      [0101] __end_2 = end l
      # pred: { [0101] } succ: { [0104] }
      # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { run%__end_2.2, run%__iter_2.2, run%l.2 } live-out: { run%__end_2.2, run%__iter_2.2, run%l.2 }
      # now-dead: { <none> }
      [0102] jump @__loop_cond_2
  
  @__loop_cond_2:
      # pred: { [0102], [0129] } succ: { [0105] }
      # def: { run%__cmp_2.2 } clear: { <none> } mod: { run%__end_2.2, run%__iter_2.2 } read: { <none> }
      # live-in: { run%__end_2.2, run%__iter_2.2, run%l.2 } live-out: { run%__cmp_2.2, run%__end_2.2, run%__iter_2.2, run%l.2 }
      # now-dead: { <none> }
      [0104] __cmp_2 = equal __iter_2 __end_2
      # pred: { [0104] } succ: { [0107], [0132] }
      # def: { <none> } clear: { <none> } mod: { run%__cmp_2.2 } read: { <none> }
      # live-in: { run%__cmp_2.2, run%__end_2.2, run%__iter_2.2, run%l.2 } live-out: { run%__end_2.2, run%__iter_2.2, run%l.2 }
      # now-dead: { run%__cmp_2.2 }
      [0105] if.else __cmp_2 @__loop_end_2 @__loop_deref_2
  
  @__loop_deref_2:
      # pred: { [0105] } succ: { [0108] }
      # def: { run%x.2 } clear: { <none> } mod: { run%__iter_2.2 } read: { <none> }
      # live-in: { run%__end_2.2, run%__iter_2.2, run%l.2 } live-out: { run%__end_2.2, run%__iter_2.2, run%l.2, run%x.2 }
      # now-dead: { <none> }
      [0107] x = deref __iter_2
      # pred: { [0107] } succ: { [0110] }
      # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { run%__end_2.2, run%__iter_2.2, run%l.2, run%x.2 } live-out: { run%__end_2.2, run%__iter_2.2, run%l.2, run%x.2 }
      # now-dead: { <none> }
      [0108] jump @__loop_body_2
  
  @__loop_body_2:
      # pred: { [0108] } succ: { [0111] }
      # def: { run%__iter_1.2 } clear: { <none> } mod: { run%l.2 } read: { <none> }
      # live-in: { run%__end_2.2, run%__iter_2.2, run%l.2, run%x.2 } live-out: { run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2 }
      # now-dead: { <none> }
      [0110] __iter_1 = begin l
      # pred: { [0110] } succ: { [0112] }
      # def: { run%__end_1.2 } clear: { <none> } mod: { run%l.2 } read: { <none> }
      # live-in: { run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2 } live-out: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2 }
      # now-dead: { <none> }
      [0111] __end_1 = end l
      # pred: { [0111] } succ: { [0114] }
      # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2 } live-out: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2 }
      # now-dead: { <none> }
      [0112] jump @__loop_cond_1
  
  @__loop_cond_1:
      # pred: { [0112], [0124] } succ: { [0115] }
      # def: { run%__cmp_1.2 } clear: { <none> } mod: { run%__end_1.2, run%__iter_1.2 } read: { <none> }
      # live-in: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2 } live-out: { run%__cmp_1.2, run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2 }
      # now-dead: { <none> }
      [0114] __cmp_1 = equal __iter_1 __end_1
      # pred: { [0114] } succ: { [0117], [0127] }
      # def: { <none> } clear: { <none> } mod: { run%__cmp_1.2 } read: { <none> }
      # live-in: { run%__cmp_1.2, run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2 } live-out: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2 }
      # now-dead: { run%__cmp_1.2 }
      [0115] if.else __cmp_1 @__loop_end_1 @__loop_deref_1
  
  @__loop_deref_1:
      # pred: { [0115] } succ: { [0118] }
      # def: { run%y.2 } clear: { <none> } mod: { run%__iter_1.2 } read: { <none> }
      # live-in: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2 } live-out: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2, run%y.2 }
      # now-dead: { <none> }
      [0117] y = deref __iter_1
      # pred: { [0117] } succ: { [0120] }
      # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2, run%y.2 } live-out: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2, run%y.2 }
      # now-dead: { <none> }
      [0118] jump @__loop_body_1
  
  @__loop_body_1:
      # pred: { [0118] } succ: { [0121] }
      # def: { run%s.2 } clear: { <none> } mod: { run%x.2, run%y.2 } read: { <none> }
      # live-in: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2, run%y.2 } live-out: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%s.2, run%x.2 }
      # now-dead: { run%y.2 }
      [0120] s = call Hilti::fmt ("%d %d", (x, y))
      # pred: { [0120] } succ: { [0122] }
      # def: { <none> } clear: { <none> } mod: { run%s.2 } read: { <none> }
      # live-in: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%s.2, run%x.2 } live-out: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2 }
      # now-dead: { run%s.2 }
      [0121] call Hilti::print (s)
      # pred: { [0121] } succ: { [0123] }
      # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2 } live-out: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2 }
      # now-dead: { <none> }
      [0122] jump @__loop_next_1
  
  @__loop_next_1:
      # pred: { [0122] } succ: { [0124] }
      # def: { run%__iter_1.2 } clear: { <none> } mod: { run%__iter_1.2 } read: { <none> }
      # live-in: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2 } live-out: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2 }
      # now-dead: { <none> }
      [0123] __iter_1 = incr __iter_1
      # pred: { [0123] } succ: { [0114] }
      # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2 } live-out: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2 }
      # now-dead: { <none> }
      [0124] jump @__loop_cond_1
  
  @__loop_end_1:
      # pred: { [0115] } succ: { [0128] }
      # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { run%__end_2.2, run%__iter_2.2, run%l.2 } live-out: { run%__end_2.2, run%__iter_2.2, run%l.2 }
      # now-dead: { run%__end_1.2, run%__iter_1.2, run%x.2 }
      [0127] jump @__loop_next_2
  
  @__loop_next_2:
      # pred: { [0127] } succ: { [0129] }
      # def: { run%__iter_2.2 } clear: { <none> } mod: { run%__iter_2.2 } read: { <none> }
      # live-in: { run%__end_2.2, run%__iter_2.2, run%l.2 } live-out: { run%__end_2.2, run%__iter_2.2, run%l.2 }
      # now-dead: { <none> }
      [0128] __iter_2 = incr __iter_2
      # pred: { [0128] } succ: { [0104] }
      # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { run%__end_2.2, run%__iter_2.2, run%l.2 } live-out: { run%__end_2.2, run%__iter_2.2, run%l.2 }
      # now-dead: { <none> }
      [0129] jump @__loop_cond_2
  
  @__loop_end_2:
      # pred: { [0105] } succ: { [0133] }
      # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { <none> } live-out: { <none> }
      # now-dead: { run%__end_2.2, run%__iter_2.2, run%l.2 }
      [0132] call Hilti::print ("B", True)
      # pred: { [0132] } succ: { <none> }
      # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { <none> } live-out: { <none> }
      # now-dead: { <none> }
      [0133] return.void
  
}



  # pred: { <none> } succ: { <none> }
  # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
  # live-in: { <none> } live-out: { <none> }
  # now-dead: { <none> }
  [0136] block.end

