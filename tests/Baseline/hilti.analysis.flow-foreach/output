module Main

import Hilti

void run()
{

  local int<32> y
  local iterator<list<int<32>>> __end_1
  local iterator<list<int<32>>> __iter_1
  local bool __cmp_1
  local int<32> x
  local iterator<list<int<32>>> __end_2
  local iterator<list<int<32>>> __iter_2
  local bool __cmp_2
  local ref<list<int<32>>> l
  local string s
  local string addl
  
  
      # pred: { <none> } succ: { [0086] }
      # def: { run%l.2 } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { <none> } live-out: { run%l.2 }
      # now-dead: { <none> }
      [0085] l = assign list<int<32>>(1, 2, 3, 4, 5)
      # pred: { [0085] } succ: { [0115] }
      # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { run%l.2 } live-out: { run%l.2 }
      # now-dead: { <none> }
      [0086] call Hilti::print ("A", True)
      # pred: { [0086] } succ: { [0087] }
      # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { run%l.2 } live-out: { run%l.2 }
      # now-dead: { <none> }
      [0115] jump @__loop_entry_2
  
  @__loop_entry_2:
      # pred: { [0115] } succ: { [0088] }
      # def: { run%__iter_2.2 } clear: { <none> } mod: { run%l.2 } read: { <none> }
      # live-in: { run%l.2 } live-out: { run%__iter_2.2, run%l.2 }
      # now-dead: { <none> }
      [0087] __iter_2 = begin l
      # pred: { [0087] } succ: { [0089] }
      # def: { run%__end_2.2 } clear: { <none> } mod: { run%l.2 } read: { <none> }
      # live-in: { run%__iter_2.2, run%l.2 } live-out: { run%__end_2.2, run%__iter_2.2, run%l.2 }
      # now-dead: { <none> }
      [0088] __end_2 = end l
      # pred: { [0088] } succ: { [0090] }
      # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { run%__end_2.2, run%__iter_2.2, run%l.2 } live-out: { run%__end_2.2, run%__iter_2.2, run%l.2 }
      # now-dead: { <none> }
      [0089] jump @__loop_cond_2
  
  @__loop_cond_2:
      # pred: { [0089], [0107] } succ: { [0091] }
      # def: { run%__cmp_2.2 } clear: { <none> } mod: { run%__end_2.2, run%__iter_2.2 } read: { <none> }
      # live-in: { run%__end_2.2, run%__iter_2.2, run%l.2 } live-out: { run%__cmp_2.2, run%__end_2.2, run%__iter_2.2, run%l.2 }
      # now-dead: { <none> }
      [0090] __cmp_2 = equal __iter_2 __end_2
      # pred: { [0090] } succ: { [0092], [0109] }
      # def: { <none> } clear: { <none> } mod: { run%__cmp_2.2 } read: { <none> }
      # live-in: { run%__cmp_2.2, run%__end_2.2, run%__iter_2.2, run%l.2 } live-out: { run%__end_2.2, run%__iter_2.2, run%l.2 }
      # now-dead: { run%__cmp_2.2 }
      [0091] if.else __cmp_2 @__loop_end_2 @__loop_deref_2
  
  @__loop_deref_2:
      # pred: { [0091] } succ: { [0093] }
      # def: { run%x.2 } clear: { <none> } mod: { run%__iter_2.2 } read: { <none> }
      # live-in: { run%__end_2.2, run%__iter_2.2, run%l.2 } live-out: { run%__end_2.2, run%__iter_2.2, run%l.2, run%x.2 }
      # now-dead: { <none> }
      [0092] x = deref __iter_2
      # pred: { [0092] } succ: { [0094] }
      # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { run%__end_2.2, run%__iter_2.2, run%l.2, run%x.2 } live-out: { run%__end_2.2, run%__iter_2.2, run%l.2, run%x.2 }
      # now-dead: { <none> }
      [0093] jump @__loop_body_2
  
  @__loop_body_2:
      # pred: { [0093] } succ: { [0095] }
      # def: { run%__iter_1.2 } clear: { <none> } mod: { run%l.2 } read: { <none> }
      # live-in: { run%__end_2.2, run%__iter_2.2, run%l.2, run%x.2 } live-out: { run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2 }
      # now-dead: { <none> }
      [0094] __iter_1 = begin l
      # pred: { [0094] } succ: { [0096] }
      # def: { run%__end_1.2 } clear: { <none> } mod: { run%l.2 } read: { <none> }
      # live-in: { run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2 } live-out: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2 }
      # now-dead: { <none> }
      [0095] __end_1 = end l
      # pred: { [0095] } succ: { [0097] }
      # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2 } live-out: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2 }
      # now-dead: { <none> }
      [0096] jump @__loop_cond_1
  
  @__loop_cond_1:
      # pred: { [0096], [0104] } succ: { [0098] }
      # def: { run%__cmp_1.2 } clear: { <none> } mod: { run%__end_1.2, run%__iter_1.2 } read: { <none> }
      # live-in: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2 } live-out: { run%__cmp_1.2, run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2 }
      # now-dead: { <none> }
      [0097] __cmp_1 = equal __iter_1 __end_1
      # pred: { [0097] } succ: { [0099], [0117] }
      # def: { <none> } clear: { <none> } mod: { run%__cmp_1.2 } read: { <none> }
      # live-in: { run%__cmp_1.2, run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2 } live-out: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2 }
      # now-dead: { run%__cmp_1.2 }
      [0098] if.else __cmp_1 @__loop_end_1 @__loop_deref_1
  
  @__loop_deref_1:
      # pred: { [0098] } succ: { [0100] }
      # def: { run%y.2 } clear: { <none> } mod: { run%__iter_1.2 } read: { <none> }
      # live-in: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2 } live-out: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2, run%y.2 }
      # now-dead: { <none> }
      [0099] y = deref __iter_1
      # pred: { [0099] } succ: { [0101] }
      # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2, run%y.2 } live-out: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2, run%y.2 }
      # now-dead: { <none> }
      [0100] jump @__loop_body_1
  
  @__loop_body_1:
      # pred: { [0100] } succ: { [0102] }
      # def: { run%s.2 } clear: { <none> } mod: { run%x.2, run%y.2 } read: { <none> }
      # live-in: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2, run%y.2 } live-out: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%s.2, run%x.2 }
      # now-dead: { run%y.2 }
      [0101] s = call Hilti::fmt ("%d %d", (x, y))
      # pred: { [0101] } succ: { [0116] }
      # def: { <none> } clear: { <none> } mod: { run%s.2 } read: { <none> }
      # live-in: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%s.2, run%x.2 } live-out: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2 }
      # now-dead: { run%s.2 }
      [0102] call Hilti::print (s)
      # pred: { [0102] } succ: { [0103] }
      # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2 } live-out: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2 }
      # now-dead: { <none> }
      [0116] jump @__loop_next_1
  
  @__loop_next_1:
      # pred: { [0116] } succ: { [0104] }
      # def: { run%__iter_1.2 } clear: { <none> } mod: { run%__iter_1.2 } read: { <none> }
      # live-in: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2 } live-out: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2 }
      # now-dead: { <none> }
      [0103] __iter_1 = incr __iter_1
      # pred: { [0103] } succ: { [0097] }
      # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2 } live-out: { run%__end_1.2, run%__end_2.2, run%__iter_1.2, run%__iter_2.2, run%l.2, run%x.2 }
      # now-dead: { <none> }
      [0104] jump @__loop_cond_1
  
  @__loop_end_1:
      # pred: { [0098] } succ: { [0106] }
      # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { run%__end_2.2, run%__iter_2.2, run%l.2 } live-out: { run%__end_2.2, run%__iter_2.2, run%l.2 }
      # now-dead: { run%__end_1.2, run%__iter_1.2, run%x.2 }
      [0117] jump @__loop_next_2
  
  @__loop_next_2:
      # pred: { [0117] } succ: { [0107] }
      # def: { run%__iter_2.2 } clear: { <none> } mod: { run%__iter_2.2 } read: { <none> }
      # live-in: { run%__end_2.2, run%__iter_2.2, run%l.2 } live-out: { run%__end_2.2, run%__iter_2.2, run%l.2 }
      # now-dead: { <none> }
      [0106] __iter_2 = incr __iter_2
      # pred: { [0106] } succ: { [0090] }
      # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { run%__end_2.2, run%__iter_2.2, run%l.2 } live-out: { run%__end_2.2, run%__iter_2.2, run%l.2 }
      # now-dead: { <none> }
      [0107] jump @__loop_cond_2
  
  @__loop_end_2:
      # pred: { [0091] } succ: { [0110] }
      # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { <none> } live-out: { <none> }
      # now-dead: { run%__end_2.2, run%__iter_2.2, run%l.2 }
      [0109] call Hilti::print ("B", True)
      # pred: { [0109] } succ: { <none> }
      # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { <none> } live-out: { <none> }
      # now-dead: { <none> }
      [0110] return.void
  
}



  # pred: { <none> } succ: { <none> }
  # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
  # live-in: { <none> } live-out: { <none> }
  # now-dead: { <none> }
  [0118] block.end

