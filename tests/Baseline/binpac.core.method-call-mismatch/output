
>>> (Unresolved operator b .startswith(122345))
method-call-mismatch.pac2:10-10: error, no matching operator found for types
got operands: (bytes, startswith, (int<64>))
candidate operators:
    address.family()
    bytes.begin()
    bytes.decode(enum { )
    bytes.end()
    bytes.join(list<*>)
    bytes.lower()
    bytes.match(regexp,[ int<*> ])
    bytes.split1([ bytes ])
    bytes.split([ bytes ])
    bytes.startswith(bytes)
    bytes.strip([ enum {  ],[ bytes ])
    bytes.to_int(enum { )
    bytes.to_int([ uint<64> ])
    bytes.to_time(enum { )
    bytes.to_time([ uint<64> ])
    bytes.to_uint(enum { )
    bytes.to_uint([ uint<64> ])
    bytes.upper()
    interval.nsecs()
    list<*>.push_back(any)
    map<*,*>.clear()
    map<*,*>.get(any,[ any ])
    set<*>.clear()
    sink.add_filter(enum { )
    sink.close()
    sink.connect(unit)
    sink.connect_mime_type(bytes)
    sink.connect_mime_type(string)
    sink.gap(uint<64>,uint<64>)
    sink.sequence()
    sink.set_auto_trim(bool)
    sink.set_initial_sequence_number(uint<64>)
    sink.set_policy(enum { )
    sink.skip(uint<64>)
    sink.trim(uint<64>)
    sink.try_connect_mime_type(bytes)
    sink.try_connect_mime_type(string)
    sink.write(bytes,[ uint<64> ],[ uint<64> ])
    time.nsecs()
    unit.add_filter(enum { )
    unit.backtrack()
    unit.confirm()
    unit.disable(string)
    unit.disconnect()
    unit.input()
    unit.mime_type()
    unit.offset()
    unit.set_position(iterator<bytes>)
    vector<*>.push_back(any)
    vector<*>.reserve(int<*>)
 [pass::binpac::OperatorResolver]
method-call-mismatch.pac2: Aborting due to input error.
