module Main

import Hilti

type myException = exception
void run()
{

  local ref<myException> e
  local ref<myException> e_2
  
  
      # pred: { <none> } succ: { [0061] }
      # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { <none> } live-out: { <none> }
      # now-dead: { <none> }
      [0060] call Hilti::print ("A")
      # pred: { [0060] } succ: { [0062] }
      # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { <none> } live-out: { <none> }
      # now-dead: { <none> }
      [0061] exception.__begin_handler @__catch_1 Main::myException
      # pred: { [0061] } succ: { [0063], [0068] }
      # def: { run%e.2 } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { <none> } live-out: { run%e.2 }
      # now-dead: { <none> }
      [0062] e = new Main::myException
      # pred: { [0062] } succ: { [0064], [0068] }
      # def: { <none> } clear: { <none> } mod: { run%e.2 } read: { <none> }
      # live-in: { run%e.2 } live-out: { <none> }
      # now-dead: { run%e.2 }
      [0063] exception.throw e
      # pred: { [0063] } succ: { [0065], [0068] }
      # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { <none> } live-out: { <none> }
      # now-dead: { <none> }
      [0064] call Hilti::print ("Cannot be reached")
      # pred: { [0064] } succ: { [0066], [0068] }
      # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { <none> } live-out: { <none> }
      # now-dead: { <none> }
      [0065] exception.__end_handler
      # pred: { [0065] } succ: { [0073] }
      # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { <none> } live-out: { <none> }
      # now-dead: { <none> }
      [0066] jump @__catch_cont_1
  
  @__catch_1:
      # pred: { [0062], [0063], [0064], [0065] } succ: { [0069] }
      # def: { run%e_2.2 } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { <none> } live-out: { <none> }
      # now-dead: { run%e.2, run%e_2.2 }
      [0068] e_2 = exception.__get_and_clear
      # pred: { [0068] } succ: { [0070] }
      # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { <none> } live-out: { <none> }
      # now-dead: { <none> }
      [0069] call Hilti::print ("Caught it!")
      # pred: { [0069] } succ: { [0073] }
      # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { <none> } live-out: { <none> }
      # now-dead: { <none> }
      [0070] jump @__catch_cont_1
  
  @__catch_cont_1:
      # pred: { [0066], [0070] } succ: { [0074] }
      # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { <none> } live-out: { <none> }
      # now-dead: { <none> }
      [0073] call Hilti::print ("C")
      # pred: { [0073] } succ: { <none> }
      # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { <none> } live-out: { <none> }
      # now-dead: { <none> }
      [0074] return.void
  
}



  # pred: { <none> } succ: { <none> }
  # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
  # live-in: { <none> } live-out: { <none> }
  # now-dead: { <none> }
  [0077] block.end

