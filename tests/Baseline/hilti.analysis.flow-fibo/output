module Main

import Hilti

int<32> fibo(int<32> n)
{

  local int<32> f1
  local int<32> f2
  local bool cond
  
  
      # pred: { <none> } succ: { [0048] }
      # def: { fibo%cond.2 } clear: { <none> } mod: { p:n } read: { <none> }
      # live-in: { p:n } live-out: { fibo%cond.2, p:n }
      # now-dead: { <none> }
      [0047] cond = int.slt n 2
      # pred: { [0047] } succ: { [0049], [0055] }
      # def: { <none> } clear: { <none> } mod: { fibo%cond.2 } read: { <none> }
      # live-in: { fibo%cond.2, p:n } live-out: { p:n }
      # now-dead: { fibo%cond.2 }
      [0048] if.else cond @done @recurse
  
  @recurse:
      # pred: { [0048] } succ: { [0050] }
      # def: { p:n } clear: { <none> } mod: { p:n } read: { <none> }
      # live-in: { p:n } live-out: { p:n }
      # now-dead: { <none> }
      [0049] n = int.sub n 1
      # pred: { [0049] } succ: { [0051] }
      # def: { fibo%f1.2 } clear: { <none> } mod: { p:n } read: { <none> }
      # live-in: { p:n } live-out: { fibo%f1.2, p:n }
      # now-dead: { <none> }
      [0050] f1 = call fibo (n)
      # pred: { [0050] } succ: { [0052] }
      # def: { p:n } clear: { <none> } mod: { p:n } read: { <none> }
      # live-in: { fibo%f1.2, p:n } live-out: { fibo%f1.2, p:n }
      # now-dead: { <none> }
      [0051] n = int.sub n 1
      # pred: { [0051] } succ: { [0053] }
      # def: { fibo%f2.2 } clear: { <none> } mod: { p:n } read: { <none> }
      # live-in: { fibo%f1.2, p:n } live-out: { fibo%f1.2, fibo%f2.2 }
      # now-dead: { p:n }
      [0052] f2 = call fibo (n)
      # pred: { [0052] } succ: { [0054] }
      # def: { fibo%f1.2 } clear: { <none> } mod: { fibo%f1.2, fibo%f2.2 } read: { <none> }
      # live-in: { fibo%f1.2, fibo%f2.2 } live-out: { fibo%f1.2 }
      # now-dead: { fibo%f2.2 }
      [0053] f1 = int.add f1 f2
      # pred: { [0053] } succ: { <none> }
      # def: { <none> } clear: { <none> } mod: { fibo%f1.2 } read: { <none> }
      # live-in: { fibo%f1.2 } live-out: { <none> }
      # now-dead: { fibo%f1.2 }
      [0054] return.result f1
  
  @done:
      # pred: { [0048] } succ: { <none> }
      # def: { <none> } clear: { <none> } mod: { p:n } read: { <none> }
      # live-in: { p:n } live-out: { <none> }
      # now-dead: { p:n }
      [0055] return.result n
  
}


void run()
{

  local int<32> f
  
  
      # pred: { <none> } succ: { [0057] }
      # def: { run%f.2 } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { <none> } live-out: { run%f.2 }
      # now-dead: { <none> }
      [0056] f = call fibo (10)
      # pred: { [0056] } succ: { [0058] }
      # def: { <none> } clear: { <none> } mod: { run%f.2 } read: { <none> }
      # live-in: { run%f.2 } live-out: { <none> }
      # now-dead: { run%f.2 }
      [0057] call Hilti::print (f)
      # pred: { [0057] } succ: { <none> }
      # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
      # live-in: { <none> } live-out: { <none> }
      # now-dead: { <none> }
      [0058] return.void
  
}



  # pred: { <none> } succ: { <none> }
  # def: { <none> } clear: { <none> } mod: { <none> } read: { <none> }
  # live-in: { <none> } live-out: { <none> }
  # now-dead: { <none> }
  [0060] block.end

